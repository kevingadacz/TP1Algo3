Object subclass: #AlgoFix	instanceVariableNames: 'pintores presupuestador'	classVariableNames: ''	package: 'TP1'!!AlgoFix methodsFor: 'as yet unclassified' stamp: 'KevinGadacz 5/23/2020 23:39'!registrarPintorDeRodillo: nombrePintor conValorHora: valorHorapintores add: (PintorDeRodillo conNombre: nombrePintor yValorHora: valorHora).! !!AlgoFix methodsFor: 'as yet unclassified' stamp: 'KevinGadacz 5/23/2020 19:01'!crearPintura: nombrePintura conPrecioPorLitro: precioLitro manosPincel: numeroManosPincel manosRodillo: numeroManosRodillo	|pintura|		pintura := Pintura crearConNombre: nombrePintura ConPrecioPorLitro: precioLitro manosPincel: numeroManosPincel manosRodillo: numeroManosRodillo.		^pintura.! !!AlgoFix methodsFor: 'as yet unclassified' stamp: 'KevinGadacz 5/24/2020 20:49'!registrarPintorDePincel: nombrePintor conValorHora: valorHorapintores add: (PintorDePincel conNombre: nombrePintor yValorHora: valorHora).! !!AlgoFix methodsFor: 'as yet unclassified' stamp: 'KevinGadacz 5/24/2020 19:32'!presupuestoMasBaratoParaPintarMetrosCuadrados: numeroMetros conPintura: unaPintura^presupuestador armarPresupuestoMasBaratoParaM2: numeroMetros conPintura: unaPintura yPintores: pintores. ! !!AlgoFix methodsFor: 'as yet unclassified' stamp: 'KevinGadacz 5/24/2020 11:04'!manoDeObra: valorManoDeObra masMateriales: valorMateriales 	^(valorManoDeObra  + valorMateriales).! !!AlgoFix methodsFor: 'accessing' stamp: 'KevinGadacz 5/24/2020 22:27'!pintores	^pintores.! !!AlgoFix methodsFor: 'initialization' stamp: 'KevinGadacz 5/24/2020 19:13'!initialize 	pintores := OrderedCollection new.	presupuestador := Presupuestador new.! !Object subclass: #ArmadorDePresupuestos	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!ArmadorDePresupuestos methodsFor: 'as yet unclassified' stamp: 'KevinGadacz 5/24/2020 17:29'!armarPresupuestosParaM2: numeroMetros conPintura: unaPintura yPintores: pintores	"Tiene que conocer si o si a los pintores y a las pinturas para poder armar los presupuestos."		^pintores collect:[:pintor | Presupuesto crearConResponsable: (pintor nombre) 														 yValor: ((pintor calcularManoDeObraParaM2: numeroMetros conPintor: pintor yPintura: unaPintura) 														        + (pintor calcularCostoMaterialesParaM2: numeroMetros conPintura: unaPintura))]. ! !Error subclass: #CantidadManosNegativaError	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!Object subclass: #DescuentoDel50PorcientoEnM2CuandoM2EsMayor40	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!DescuentoDel50PorcientoEnM2CuandoM2EsMayor40 methodsFor: 'as yet unclassified' stamp: 'KevinGadacz 5/24/2020 19:35'!aplicarDescuentoPorM2:numeroMetros alCostoDeManoDeObra: costoManoDeObraSinDescuentos|costoManoDeObraFinal|costoManoDeObraFinal := costoManoDeObraSinDescuentos .(numeroMetros > 40) ifTrue: [ ^(costoManoDeObraFinal / -2)].^0 .! !Error subclass: #M2NegativosError	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!Object subclass: #Pintor	instanceVariableNames: 'nombre valorHora demoraEnPintarM2 consumoLitrosDePinturaPorM2'	classVariableNames: ''	package: 'TP1'!!Pintor methodsFor: 'as yet unclassified' stamp: 'KevinGadacz 5/24/2020 01:03'!calcularManoDeObraParaM2: numeroMetros conPintura: unaPintura	self subclassResponsibility.! !!Pintor methodsFor: 'as yet unclassified' stamp: 'KevinGadacz 5/24/2020 00:39'!setNombre: unNombre	nombre := unNombre.! !!Pintor methodsFor: 'as yet unclassified' stamp: 'KevinGadacz 5/24/2020 00:39'!setValorHora: unValorHora	valorHora := unValorHora ! !!Pintor methodsFor: 'as yet unclassified' stamp: 'KevinGadacz 5/25/2020 22:55'!calcularCostoMaterialesParaM2: numeroMetros conPintura: unaPintura	self subclassResponsibility.! !!Pintor methodsFor: 'accessing' stamp: 'KevinGadacz 5/24/2020 10:54'!nombre	^nombre .! !!Pintor methodsFor: 'accessing' stamp: 'KevinGadacz 5/24/2020 01:30'!valorHora	^valorHora .! !!Pintor methodsFor: 'accessing' stamp: 'KevinGadacz 5/24/2020 10:48'!demoraEnPintarM2	^demoraEnPintarM2 .! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Pintor class	instanceVariableNames: ''!!Pintor class methodsFor: 'as yet unclassified' stamp: 'KevinGadacz 5/24/2020 20:47'!conNombre: nombrePintor yValorHora: valorHora| pintor |(valorHora < 0) ifTrue: [ ValorHoraError signal].pintor := self new.pintor setNombre: nombrePintor.pintor setValorHora: valorHora.^pintor .! !Pintor subclass: #PintorDePincel	instanceVariableNames: 'descuentos'	classVariableNames: ''	package: 'TP1'!!PintorDePincel methodsFor: 'as yet unclassified' stamp: 'KevinGadacz 5/25/2020 22:54'!calcularCostoMaterialesParaM2: numeroMetros conPintura: unaPintura	^(numeroMetros * consumoLitrosDePinturaPorM2 * unaPintura precioPorLitro  * unaPintura manosPincel).! !!PintorDePincel methodsFor: 'initialization' stamp: 'KevinGadacz 5/24/2020 01:28'!initialize	descuentos := OrderedCollection new.	descuentos add: DescuentoDel50PorcientoEnM2CuandoM2EsMayor40 new.	demoraEnPintarM2 := 2.	consumoLitrosDePinturaPorM2 := 4.! !!PintorDePincel methodsFor: 'accessing' stamp: 'KevinGadacz 5/24/2020 19:02'!calcularManoDeObraParaM2: numeroMetros conPintor: unPintor yPintura: unaPintura	| costoManoDeObraSinDescuentos preciosConDescuento sumatoriaDeDescuentos |		costoManoDeObraSinDescuentos := numeroMetros * unPintor demoraEnPintarM2 * unPintor valorHora * unaPintura manosPincel.		preciosConDescuento := descuentos		collect: [ :descuento | 			descuento				aplicarDescuentoPorM2: numeroMetros				alCostoDeManoDeObra: costoManoDeObraSinDescuentos ].		sumatoriaDeDescuentos := preciosConDescuento		inject: 0		into: [ :sumaDescuentos :each | sumaDescuentos + each ].						^costoManoDeObraSinDescuentos + sumatoriaDeDescuentos.	! !Pintor subclass: #PintorDeRodillo	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!PintorDeRodillo methodsFor: 'as yet unclassified' stamp: 'KevinGadacz 5/24/2020 11:45'!calcularManoDeObraParaM2: numeroMetros conPintor: unPintor yPintura: unaPintura^ (numeroMetros * unPintor demoraEnPintarM2  * unPintor valorHora * unaPintura manosRodillo).! !!PintorDeRodillo methodsFor: 'as yet unclassified' stamp: 'KevinGadacz 5/25/2020 22:55'!calcularCostoMaterialesParaM2: numeroMetros conPintura: unaPintura	^(numeroMetros * consumoLitrosDePinturaPorM2 * unaPintura precioPorLitro  * unaPintura manosRodillo).! !!PintorDeRodillo methodsFor: 'initialization' stamp: 'KevinGadacz 5/23/2020 23:37'!initialize	demoraEnPintarM2 := 1.	consumoLitrosDePinturaPorM2 := 5.! !Object subclass: #Pintura	instanceVariableNames: 'nombre precioPorLitro manosPincel manosRodillo'	classVariableNames: ''	package: 'TP1'!!Pintura methodsFor: 'initialization' stamp: 'KevinGadacz 5/23/2020 17:22'!setManosPincel: numeroManosPincel.	manosPincel := numeroManosPincel .! !!Pintura methodsFor: 'initialization' stamp: 'KevinGadacz 5/23/2020 17:21'!setNombre: nombrePintura.	nombre := nombrePintura .! !!Pintura methodsFor: 'initialization' stamp: 'KevinGadacz 5/23/2020 17:23'!setManosRodillo: numeroManosRodillo	manosRodillo  := numeroManosRodillo .! !!Pintura methodsFor: 'initialization' stamp: 'KevinGadacz 5/23/2020 17:22'!setPrecioPorLitro: precioLitro.	precioPorLitro  := precioLitro .! !!Pintura methodsFor: 'accessing' stamp: 'KevinGadacz 5/12/2020 22:06'!precioPorLitro	^precioPorLitro ! !!Pintura methodsFor: 'accessing' stamp: 'KevinGadacz 5/12/2020 22:07'!manosPincel	^manosPincel ! !!Pintura methodsFor: 'accessing' stamp: 'KevinGadacz 5/12/2020 22:07'!manosRodillo	^manosRodillo ! !!Pintura methodsFor: 'accessing' stamp: 'KevinGadacz 5/23/2020 18:51'!nombre	^nombre .! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Pintura class	instanceVariableNames: ''!!Pintura class methodsFor: 'as yet unclassified' stamp: 'KevinGadacz 5/24/2020 22:37'!crearConNombre: nombrePintura ConPrecioPorLitro: precioLitro manosPincel: numeroManosPincel manosRodillo: numeroManosRodillo| pintura |((numeroManosPincel < 0) | (numeroManosRodillo < 0)) ifTrue: [ CantidadManosNegativaError signal ].(precioLitro < 0) ifTrue: [ PrecioLitroError signal ].pintura := self new.pintura setNombre: nombrePintura.pintura setPrecioPorLitro: precioLitro.pintura setManosPincel: numeroManosPincel.pintura setManosRodillo: numeroManosRodillo .^pintura .! !Error subclass: #PrecioLitroError	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!Object subclass: #Presupuestador	instanceVariableNames: 'presupuestos armadorDePresupuestos'	classVariableNames: ''	package: 'TP1'!!Presupuestador methodsFor: 'accessing' stamp: 'KevinGadacz 5/24/2020 22:04'!armarPresupuestoMasBaratoParaM2: numeroMetros conPintura: unaPintura yPintores: pintores		pintores ifNil: [ PresupuestoSinPintoresError signal ].	(numeroMetros < 0) ifTrue: [ M2NegativosError signal ].	presupuestos := armadorDePresupuestos armarPresupuestosParaM2: numeroMetros conPintura: unaPintura yPintores: pintores.		^ presupuestos detectMin: [ :each | each valor ]! !!Presupuestador methodsFor: 'accessing' stamp: 'KevinGadacz 5/24/2020 21:57'!presupuestos	^presupuestos.! !!Presupuestador methodsFor: 'as yet unclassified' stamp: 'KevinGadacz 5/24/2020 22:04'!initialize	presupuestos := OrderedCollection new.	armadorDePresupuestos := ArmadorDePresupuestos new.! !Object subclass: #Presupuesto	instanceVariableNames: 'responsable valor'	classVariableNames: ''	package: 'TP1'!!Presupuesto methodsFor: 'as yet unclassified' stamp: 'KevinGadacz 5/24/2020 00:12'!valor	^valor ! !!Presupuesto methodsFor: 'as yet unclassified' stamp: 'KevinGadacz 5/24/2020 10:57'!responsable	^responsable ! !!Presupuesto methodsFor: 'initialization' stamp: 'KevinGadacz 5/24/2020 01:14'!setValor: unValor	valor := unValor.! !!Presupuesto methodsFor: 'initialization' stamp: 'KevinGadacz 5/24/2020 01:14'!setResponsable: unResponsable	responsable := unResponsable.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Presupuesto class	instanceVariableNames: ''!!Presupuesto class methodsFor: 'as yet unclassified' stamp: 'KevinGadacz 5/24/2020 01:15'!crearConResponsable: nombrePintor yValor: unValor |presupuesto|presupuesto := self new.presupuesto setResponsable: nombrePintor .presupuesto setValor: unValor.^presupuesto.! !Error subclass: #PresupuestoSinPintoresError	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!Error subclass: #ValorHoraError	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!